name: Build Release

on:
  push:
    branches: [master]

jobs:
  test:
    name: Validation Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.x"

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Install dependencies
        run: flutter pub get

      - name: Test validation
        run: flutter test

  quality:
    name: Quality dart Code
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.x"

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Install dependencies
        run: dart pub get

      - name: Analyze Dart
        uses: zgosalvez/github-actions-analyze-dart@v1

  version:
    name: Create version number
    needs: [quality]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        uses: codacy/git-version@2.2.0

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build Apps
    needs: [quality]
    runs-on: macos-latest
    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=v$(date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Install pub Dependencies
        run: flutter pub get

      - name: Build Android App
        run: |
          flutter build apk --release --split-per-abi
          flutter build appbundle

      - name: Build iOS App
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      # - name: Build Web App
      #   run: |
      #     flutter build web
      #     cd build/web
      #     zip -r web-app.zip .

      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.APP_VERSION }}
          name: ${{ env.APP_VERSION }}
          token: ${{ secrets.GH_TOKEN }}
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab,build/ios/iphoneos/app.ipa,build/web/web-app.zip"

  release:
    name: Release app to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle

      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: br.brunocarvalhs
          releaseFile: app-release.aab
          track: internal
          whatsNewDirectory: distribution/whatsnew
