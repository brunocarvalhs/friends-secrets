name: Pipeline

on:
  push:
    branches: [develop, master, releases/**, hotfix/**]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [develop, master, releases/**, hotfix/**]

env:
  flutter_version: "2.10.3"
  flutter_channel: "stable"
  java_version: "8"

jobs:
  preparing_environment:
    runs-on: ubuntu-latest
    name: Preparação do Ambiente
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - uses: olegtarasov/get-tag@v2
        id: tagName
        with:
          tagRegex: 'internal-v([0-9]+.[0-9]+.[0-9]+\+[0-9]+)'
          tagRegexGroup: 1

      - name: Replace YAML version with tag version
        run: |
          sed -i 's/99.99.99+99/'$GIT_TAG_NAME'/g' pubspec.yaml|
          echo "Tag used version:"$GIT_TAG_NAME

  build_android:
    runs-on: ubuntu-latest
    needs: [preparing_environment]
    name: Build Android
    steps:
      - uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Create google-services file
        run: |
          touch ./android/app/google-services.json
          echo "${{ secrets.GOOGLE_SERVICE_JSON }}" | base64 --decode > ./android/app/google-services.json

      - name: Create key.properties file
        run: |
          touch ./android/key.properties
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > ./android/key.properties

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.java_version }}
          distribution: "adopt"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Install pub Dependencies
        run: flutter pub get

      - name: Build Android App
        run: |
          flutter build appbundle --profile
          flutter build apk --profile

  build_ios:
    runs-on: macos-latest
    needs: [preparing_environment]
    name: Build iOS
    steps:
      - uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Create google-services file
        run: |
          touch ./android/app/google-services.json
          echo "${{ secrets.GOOGLE_SERVICE_JSON }}" | base64 --decode > ./android/app/google-services.json

      - name: Create key.properties file
        run: |
          touch ./android/key.properties
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > ./android/key.properties

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.java_version }}
          distribution: "adopt"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Install pub Dependencies
        run: flutter pub get

      # - name: Build iOS App
      #   run: |
      #     flutter build ios --profile

  quality:
    runs-on: ubuntu-latest
    needs: [build_ios, build_android]
    name: Qualidade
    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Analyze Lint
        run: flutter analyze --fatal-warnings

  checkstyle:
    runs-on: ubuntu-latest
    needs: [build_ios, build_android]
    name: Check Style
    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Check Flutter Formatting
        run: flutter format ./lib --set-exit-if-changed

  lint:
    runs-on: ubuntu-latest
    needs: [checkstyle]
    name: Lint
    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Analyze Lint
        run: flutter analyze

  unit_test:
    runs-on: ubuntu-latest
    needs: [build_ios, build_android]
    name: Unit Test
    steps:
      - uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Create google-services file
        run: |
          touch ./android/app/google-services.json
          echo "${{ secrets.GOOGLE_SERVICE_JSON }}" | base64 --decode > ./android/app/google-services.json

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Install pub Dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

  coverage:
    runs-on: ubuntu-latest
    needs: [unit_test]
    name: Cobertura
    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Install pub Dependencies
        run: flutter pub get

      - name: Run tests Coverage
        run: flutter test --coverage

  develop:
    if: ${{ github.repository }} == 'develop'
    runs-on: macos-latest
    needs: [quality, lint, coverage]
    name: Develop
    steps:
      - uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Create google-services file
        run: |
          touch ./android/app/google-services.json
          echo "${{ secrets.GOOGLE_SERVICE_JSON }}" | base64 --decode > ./android/app/google-services.json

      - name: Create key.properties file
        run: |
          touch ./android/key.properties
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > ./android/key.properties

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.java_version }}
          distribution: "adopt"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Install pub Dependencies
        run: flutter pub get

      - name: Build Android App
        run: |
          flutter build appbundle --profile
          flutter build apk --profile

      # - name: Build iOS App
      #   run: |
      #     flutter build ios --profile

      - name: Upload math result for Android
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
          name: ${{ env.APP_VERSION }}-develop
          token: ${{ secrets.GH_TOKEN }}
          artifacts: "build/app/outputs/apk/release/*.apk, build/app/outputs/bundle/release/*.aab, build/ios/iphoneos/*.ipa"

  prod:
    if: ${{ github.repository }} == 'master'
    runs-on: macos-latest
    needs: [quality, lint, coverage]
    name: Production
    steps:
      - uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Create google-services file
        run: |
          touch ./android/app/google-services.json
          echo "${{ secrets.GOOGLE_SERVICE_JSON }}" | base64 --decode > ./android/app/google-services.json

      - name: Create key.properties file
        run: |
          touch ./android/key.properties
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > ./android/key.properties

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.java_version }}
          distribution: "adopt"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: ${{ env.flutter_channel }}

      - name: Install pub Dependencies
        run: flutter pub get

      - name: Build Android App
        run: |
          flutter build appbundle --release
          flutter build apk --release

      # - name: Build iOS App
      #   run: |
      #     flutter build ios --release

      - name: Upload math result for Android
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
          name: ${{ env.APP_VERSION }}-prod
          token: ${{ secrets.GH_TOKEN }}
          artifacts: "build/app/outputs/apk/release/*.apk, build/app/outputs/bundle/release/*.aab, build/ios/iphoneos/*.ipa"
