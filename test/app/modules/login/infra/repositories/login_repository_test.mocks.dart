// Mocks generated by Mockito 5.0.17 from annotations
// in friends_secrets/test/app/modules/login/infra/repositories/login_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:friends_secrets/app/modules/login/infra/datasource/login_data_source.dart'
    as _i3;
import 'package:friends_secrets/app/modules/login/infra/models/user_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserModel_0 extends _i1.Fake implements _i2.UserModel {}

/// A class which mocks [LoginDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginDataSource extends _i1.Mock implements _i3.LoginDataSource {
  MockLoginDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserModel> login() =>
      (super.noSuchMethod(Invocation.method(#login, []),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<_i2.UserModel> currentUser() =>
      (super.noSuchMethod(Invocation.method(#currentUser, []),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [LoginDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class LoginDataSourceMock extends _i1.Mock implements _i3.LoginDataSource {
  @override
  _i4.Future<_i2.UserModel> login() =>
      (super.noSuchMethod(Invocation.method(#login, []),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<_i2.UserModel> currentUser() =>
      (super.noSuchMethod(Invocation.method(#currentUser, []),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
